/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 22 06:35:24 GMT 2020
 */

package sg.edu.nus.comp.cs4218.impl.app;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import sg.edu.nus.comp.cs4218.impl.app.SedApplication;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SedApplication_ESTest extends SedApplication_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SedApplication sedApplication0 = new SedApplication();
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(inputStream0).read(any(byte[].class) , anyInt() , anyInt());
      try { 
        sedApplication0.replaceSubstringInStdin("S", "", 1789, inputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SedApplication sedApplication0 = new SedApplication();
      try { 
        sedApplication0.replaceSubstringInStdin("", "", 849, (InputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Null Pointer Exception
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SedApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SedApplication sedApplication0 = new SedApplication();
      try { 
        sedApplication0.replaceSubstringInFile("P-k1^zV8}", "", 0, "sg.edu.nus.comp.cs4218.impl.app.SedApplication");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No such file or directory
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SedApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SedApplication sedApplication0 = new SedApplication();
      try { 
        sedApplication0.replaceSubstringInFile((String) null, (String) null, 0, (String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Null arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SedApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SedApplication sedApplication0 = new SedApplication();
      try { 
        sedApplication0.replaceSubstringInFile("", ".", 0, "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // This is a directory
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SedApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SedApplication sedApplication0 = new SedApplication();
      String[] stringArray0 = new String[6];
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      try { 
        sedApplication0.run(stringArray0, inputStream0, (OutputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // sed: Null Pointer Exception
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SedApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SedApplication sedApplication0 = new SedApplication();
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      OutputStream outputStream0 = mock(OutputStream.class, new ViolatedAssumptionAnswer());
      try { 
        sedApplication0.run((String[]) null, inputStream0, outputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // sed: Null arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SedApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SedApplication sedApplication0 = new SedApplication();
      String[] stringArray0 = new String[10];
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      OutputStream outputStream0 = mock(OutputStream.class, new ViolatedAssumptionAnswer());
      try { 
        sedApplication0.run(stringArray0, inputStream0, outputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // sed: null
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SedApplication", e);
      }
  }
}
