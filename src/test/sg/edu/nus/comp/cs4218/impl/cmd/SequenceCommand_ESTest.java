/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 22 06:39:17 GMT 2020
 */

package sg.edu.nus.comp.cs4218.impl.cmd;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sg.edu.nus.comp.cs4218.Command;
import sg.edu.nus.comp.cs4218.impl.cmd.SequenceCommand;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SequenceCommand_ESTest extends SequenceCommand_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SequenceCommand sequenceCommand0 = new SequenceCommand((List<Command>) null);
      // Undeclared exception!
      try { 
        sequenceCommand0.evaluate((InputStream) null, (OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.cmd.SequenceCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SequenceCommand sequenceCommand0 = new SequenceCommand((List<Command>) null);
      sequenceCommand0.terminate();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SequenceCommand sequenceCommand0 = new SequenceCommand((List<Command>) null);
      List<Command> list0 = sequenceCommand0.getCommands();
      assertNull(list0);
  }
}
