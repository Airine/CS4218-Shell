/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 22 06:32:32 GMT 2020
 */

package sg.edu.nus.comp.cs4218.impl.app;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import sg.edu.nus.comp.cs4218.Environment;
import sg.edu.nus.comp.cs4218.impl.app.PasteApplication;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PasteApplication_ESTest extends PasteApplication_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PasteApplication pasteApplication0 = new PasteApplication();
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1792220919), 2445);
      // Undeclared exception!
      try { 
        pasteApplication0.mergeStdin(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PasteApplication pasteApplication0 = new PasteApplication();
      String[] stringArray0 = new String[1];
      Environment.currentDirectory = null;
      stringArray0[0] = "-tY0i<!@M4";
      // Undeclared exception!
      try { 
        pasteApplication0.mergeFile(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.util.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PasteApplication pasteApplication0 = new PasteApplication();
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[1];
      try { 
        pasteApplication0.mergeFileAndStdin(inputStream0, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // paste: Null arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.PasteApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PasteApplication pasteApplication0 = new PasteApplication();
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(inputStream0).read(any(byte[].class) , anyInt() , anyInt());
      try { 
        pasteApplication0.mergeStdin(inputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // paste: IOException
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.PasteApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PasteApplication pasteApplication0 = new PasteApplication();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      try { 
        pasteApplication0.mergeFile(stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // paste: /Users/dr.fat/IdeaProjects/cs4218-project-ay1920-s2-2020-team6/ This is a directory
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.PasteApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PasteApplication pasteApplication0 = new PasteApplication();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "OutputStream not provided";
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      OutputStream outputStream0 = mock(OutputStream.class, new ViolatedAssumptionAnswer());
      try { 
        pasteApplication0.run(stringArray0, inputStream0, outputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // paste: OutputStream not provided No such file or directory
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.PasteApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PasteApplication pasteApplication0 = new PasteApplication();
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[0];
      try { 
        pasteApplication0.mergeFileAndStdin(inputStream0, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // paste: Null arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.PasteApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PasteApplication pasteApplication0 = new PasteApplication();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      try { 
        pasteApplication0.mergeFileAndStdin(dataInputStream0, (String[]) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // paste: Null arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.PasteApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PasteApplication pasteApplication0 = new PasteApplication();
      String[] stringArray0 = new String[1];
      try { 
        pasteApplication0.mergeFileAndStdin((InputStream) null, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // paste: InputStream not provided
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.PasteApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("]6xh|5");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "J=");
      PasteApplication pasteApplication0 = new PasteApplication();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "]6xh|5";
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      OutputStream outputStream0 = mock(OutputStream.class, new ViolatedAssumptionAnswer());
      pasteApplication0.run(stringArray0, inputStream0, outputStream0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PasteApplication pasteApplication0 = new PasteApplication();
      String[] stringArray0 = new String[0];
      try { 
        pasteApplication0.mergeFile(stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // paste: Null arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.PasteApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PasteApplication pasteApplication0 = new PasteApplication();
      try { 
        pasteApplication0.mergeFile((String[]) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // paste: Null arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.PasteApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PasteApplication pasteApplication0 = new PasteApplication();
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      String string0 = pasteApplication0.mergeStdin(byteArrayInputStream0);
      assertEquals("\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PasteApplication pasteApplication0 = new PasteApplication();
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      doReturn((-1)).when(inputStream0).read(any(byte[].class) , anyInt() , anyInt());
      String string0 = pasteApplication0.mergeStdin(inputStream0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PasteApplication pasteApplication0 = new PasteApplication();
      try { 
        pasteApplication0.mergeStdin((InputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // paste: InputStream not provided
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.PasteApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PasteApplication pasteApplication0 = new PasteApplication();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-";
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(inputStream0).read(any(byte[].class) , anyInt() , anyInt());
      OutputStream outputStream0 = mock(OutputStream.class, new ViolatedAssumptionAnswer());
      try { 
        pasteApplication0.run(stringArray0, inputStream0, outputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // paste: IOException
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.PasteApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PasteApplication pasteApplication0 = new PasteApplication();
      String[] stringArray0 = new String[8];
      stringArray0[4] = "-";
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      OutputStream outputStream0 = mock(OutputStream.class, new ViolatedAssumptionAnswer());
      try { 
        pasteApplication0.run(stringArray0, inputStream0, outputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // paste: Null arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.PasteApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PasteApplication pasteApplication0 = new PasteApplication();
      String[] stringArray0 = new String[6];
      try { 
        pasteApplication0.run(stringArray0, (InputStream) null, (OutputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // paste: OutputStream not provided
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.PasteApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PasteApplication pasteApplication0 = new PasteApplication();
      String[] stringArray0 = new String[0];
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      OutputStream outputStream0 = mock(OutputStream.class, new ViolatedAssumptionAnswer());
      try { 
        pasteApplication0.run(stringArray0, inputStream0, outputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // paste: Null arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.PasteApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PasteApplication pasteApplication0 = new PasteApplication();
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      OutputStream outputStream0 = mock(OutputStream.class, new ViolatedAssumptionAnswer());
      try { 
        pasteApplication0.run((String[]) null, inputStream0, outputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // paste: Null arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.PasteApplication", e);
      }
  }
}
