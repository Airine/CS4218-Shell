/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 22 06:39:35 GMT 2020
 */

package sg.edu.nus.comp.cs4218.impl.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sg.edu.nus.comp.cs4218.impl.util.StringUtils;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StringUtils_ESTest extends StringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringUtils.tokenize("");
      StringUtils.isBlank("");
      String string0 = StringUtils.multiplyChar('', 2551);
      StringUtils.tokenize(string0);
      StringUtils.isNumber("");
      StringUtils.tokenize(string0);
      String string1 = StringUtils.multiplyChar('N', 2551);
      StringUtils.tokenize(string1);
      // Undeclared exception!
      StringUtils.isBlank(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringUtils.tokenize("");
      String string0 = StringUtils.fileSeparator();
      assertEquals("/", string0);
      
      boolean boolean0 = StringUtils.isNumber("/");
      assertFalse(boolean0);
      
      boolean boolean1 = StringUtils.isBlank(",5&}M$'##c@#ZCU");
      boolean boolean2 = StringUtils.isNumber("6");
      assertFalse(boolean2 == boolean1);
      
      String[] stringArray0 = StringUtils.tokenize("");
      assertEquals(0, stringArray0.length);
      
      String string1 = StringUtils.multiplyChar('q', 0);
      assertEquals("", string1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringUtils.isBlank("uUc)wdJH");
      StringUtils.isBlank((String) null);
      boolean boolean0 = StringUtils.isNumber((String) null);
      boolean boolean1 = StringUtils.isBlank("pm6;");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      boolean boolean0 = StringUtils.isNumber("A]rTOh}yEW^,Q 8Gx 0");
      boolean boolean1 = StringUtils.isBlank("Xb");
      assertTrue(boolean1 == boolean0);
      
      String[] stringArray0 = StringUtils.tokenize("");
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = StringUtils.fileSeparator();
      assertEquals("/", string0);
      
      String[] stringArray0 = StringUtils.tokenize("");
      assertEquals(0, stringArray0.length);
      
      boolean boolean0 = StringUtils.isNumber("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringUtils.isBlank("");
      String string0 = StringUtils.multiplyChar('N', 3150);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = StringUtils.fileSeparator();
      assertEquals("/", string0);
      
      String[] stringArray0 = StringUtils.tokenize("/");
      assertEquals(1, stringArray0.length);
      
      String string1 = StringUtils.multiplyChar('$', 0);
      assertEquals("", string1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = StringUtils.multiplyChar('v', (-295));
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      boolean boolean0 = StringUtils.isNumber("sg.edu.nus.comp.cs4218.impl.util.StringUtils");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      boolean boolean0 = StringUtils.isNumber("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = StringUtils.multiplyChar('t', 0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringUtils.isBlank("");
      String[] stringArray0 = StringUtils.tokenize("");
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = StringUtils.tokenize("|%>");
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      boolean boolean0 = StringUtils.isBlank("9- aM-j\"=9dzJ4b-");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = StringUtils.multiplyChar('8', 9);
      assertEquals("888888888", string0);
      
      StringUtils.tokenize("888888888");
      StringUtils.fileSeparator();
      StringUtils.fileSeparator();
      StringUtils.isNumber("/");
      String[] stringArray0 = StringUtils.tokenize("8?");
      assertEquals(1, stringArray0.length);
      
      StringUtils.fileSeparator();
      String string1 = StringUtils.STRING_PARENT_DIR;
      StringUtils.isBlank("");
      StringUtils.fileSeparator();
      StringUtils.fileSeparator();
      StringUtils.isNumber("|8&<VPopph>5");
      StringUtils.isNumber("|8&<VPopph>5");
      boolean boolean0 = StringUtils.isNumber("888888888");
      StringUtils.isNumber("/");
      String string2 = StringUtils.fileSeparator();
      assertEquals("/", string2);
      
      boolean boolean1 = StringUtils.isNumber("");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringUtils.isBlank("");
      StringUtils.fileSeparator();
      StringUtils.tokenize(".");
      String[] stringArray0 = StringUtils.tokenize("/");
      assertEquals(1, stringArray0.length);
      
      StringUtils.isBlank("");
      StringUtils.fileSeparator();
      String[] stringArray1 = StringUtils.tokenize("");
      assertEquals(0, stringArray1.length);
      
      String string0 = StringUtils.multiplyChar('#', 9);
      assertEquals("#########", string0);
      
      String string1 = StringUtils.multiplyChar('%', (-2569));
      assertEquals("", string1);
      
      StringUtils.tokenize((String) null);
      StringUtils.fileSeparator();
      boolean boolean0 = StringUtils.isBlank("/");
      StringUtils.tokenize((String) null);
      StringUtils.isNumber("/");
      StringUtils.fileSeparator();
      boolean boolean1 = StringUtils.isNumber("Q*");
      assertFalse(boolean1);
      
      String string2 = StringUtils.fileSeparator();
      assertEquals("/", string2);
      
      boolean boolean2 = StringUtils.isNumber("6");
      assertFalse(boolean2 == boolean0);
      
      String[] stringArray2 = StringUtils.tokenize("/");
      assertEquals(1, stringArray2.length);
  }
}
