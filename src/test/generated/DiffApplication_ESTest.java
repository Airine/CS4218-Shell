/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 22 06:32:28 GMT 2020
 */

package generated;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;
import sg.edu.nus.comp.cs4218.Environment;
import sg.edu.nus.comp.cs4218.impl.app.DiffApplication;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DiffApplication_ESTest extends DiffApplication_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DiffApplication diffApplication0 = new DiffApplication();
      Boolean boolean0 = Boolean.TRUE;
      Boolean boolean1 = new Boolean(false);
      try { 
        diffApplication0.diffTwoDir("", "", boolean0, boolean0, boolean1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // diff: shell: No such file or directory
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.DiffApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DiffApplication diffApplication0 = new DiffApplication();
      Boolean boolean0 = Boolean.TRUE;
      Boolean boolean1 = Boolean.valueOf("");
      try { 
        diffApplication0.diffTwoDir("", "", boolean0, boolean1, boolean1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // diff: shell: No such file or directory
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.DiffApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DiffApplication diffApplication0 = new DiffApplication();
      String[] stringArray0 = new String[6];
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)89, (byte)89);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
      // Undeclared exception!
      try { 
        diffApplication0.run(stringArray0, byteArrayInputStream0, byteArrayOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.parser.ArgsParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DiffApplication diffApplication0 = new DiffApplication();
      Boolean boolean0 = Boolean.FALSE;
      try { 
        diffApplication0.diffTwoFiles("", "", boolean0, boolean0, boolean0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // diff: shell: No such file or directory
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.DiffApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DiffApplication diffApplication0 = new DiffApplication();
      Environment.currentDirectory = null;
      Boolean boolean0 = new Boolean(false);
      // Undeclared exception!
      try { 
        diffApplication0.diffTwoFiles("-", "-", boolean0, boolean0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DiffApplication diffApplication0 = new DiffApplication();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      Boolean boolean0 = Boolean.valueOf((String) null);
      try { 
        diffApplication0.diffFileAndStdin("Qg@GFi(k4N!JTof1", pipedInputStream0, boolean0, boolean0, boolean0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // diff: No such file or directory
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.DiffApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DiffApplication diffApplication0 = new DiffApplication();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        diffApplication0.diffFileAndStdin("", mockFileInputStream0, (Boolean) null, boolean0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.DiffApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DiffApplication diffApplication0 = new DiffApplication();
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1635, (byte)0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      Boolean boolean0 = Boolean.valueOf(true);
      String string0 = diffApplication0.diffFileAndStdin("", bufferedInputStream0, boolean0, boolean0, boolean0);
      assertEquals("Files  - are identical", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DiffApplication diffApplication0 = new DiffApplication();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      Boolean boolean0 = Boolean.valueOf(false);
      String string0 = diffApplication0.diffFileAndStdin("", pushbackInputStream0, boolean0, boolean0, boolean0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DiffApplication diffApplication0 = new DiffApplication();
      String[] stringArray0 = new String[9];
      MockPrintStream mockPrintStream0 = new MockPrintStream("Nd1g8$[#0");
      try { 
        diffApplication0.run(stringArray0, (InputStream) null, mockPrintStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // diff: Null arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.DiffApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DiffApplication diffApplication0 = new DiffApplication();
      String[] stringArray0 = new String[0];
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 437, (byte) (-59));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0);
      try { 
        diffApplication0.run(stringArray0, byteArrayInputStream0, mockPrintStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // diff: Insufficient arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.DiffApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DiffApplication diffApplication0 = new DiffApplication();
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1635, (byte)0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Files  - are identical";
      stringArray0[1] = "Files  - are identical";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "Files  - are identical";
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      try { 
        diffApplication0.run(stringArray0, byteArrayInputStream0, dataOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // diff: Too many arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.DiffApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DiffApplication diffApplication0 = new DiffApplication();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      MockFile mockFile0 = new MockFile((String) null, "]l :58");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      try { 
        diffApplication0.run(stringArray0, mockFileInputStream0, mockPrintStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // diff: shell: No such file or directory
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.DiffApplication", e);
      }
  }
}
