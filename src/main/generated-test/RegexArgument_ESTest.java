/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 22 06:34:31 GMT 2020
 */

package generated;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;
import sg.edu.nus.comp.cs4218.Environment;
import sg.edu.nus.comp.cs4218.impl.util.RegexArgument;

import java.nio.file.InvalidPathException;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class RegexArgument_ESTest extends RegexArgument_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument("");
      regexArgument0.toString();
      assertFalse(regexArgument0.isRegex());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument("");
      regexArgument0.appendAsterisk();
      boolean boolean0 = regexArgument0.isRegex();
      assertEquals("\\Q\\E[^/]*", regexArgument0.getRegex());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument();
      regexArgument0.getRegex();
      assertFalse(regexArgument0.isRegex());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument();
      // Undeclared exception!
      try { 
        regexArgument0.merge((RegexArgument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.util.RegexArgument", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument("sg.edu.nus.comp.cs4218.impl.util.StringUtils");
      Environment.currentDirectory = "sg.edu.nus.comp.cs4218.impl.util.StringUtils";
      regexArgument0.appendAsterisk();
      Environment.currentDirectory = "Qsg\u0000edu\u0000nus\u0000comp\u0000cs4218\u0000EnvironmentEQEQEQ]rDBoB%4#H<5=EQ]rDBoB%4#H<5=E";
      // Undeclared exception!
      try { 
        regexArgument0.globFiles();
        fail("Expecting exception: InvalidPathException");
      
      } catch(InvalidPathException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RegexArgument regexArgument0 = null;
      try {
        regexArgument0 = new RegexArgument((String) null, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.util.RegexArgument", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RegexArgument regexArgument0 = null;
      try {
        regexArgument0 = new RegexArgument((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument("myCutYBl'}", "myCutYBl'}", false);
      regexArgument0.merge("myCutYBl'}");
      assertEquals(".*\\Qm\\E\\Qy\\E\\QC\\E\\Qu\\E\\Qt\\E\\QY\\E\\QB\\E\\Ql\\E\\Q'\\E\\Q}\\E\\QmyCutYBl'}\\E", regexArgument0.getRegex());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument();
      boolean boolean0 = regexArgument0.isEmpty();
      assertTrue(boolean0);
      assertFalse(regexArgument0.isRegex());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument("myCutYBl'}", "myCutYBl'}", false);
      boolean boolean0 = regexArgument0.isEmpty();
      assertFalse(boolean0);
      assertEquals(".*\\Qm\\E\\Qy\\E\\QC\\E\\Qu\\E\\Qt\\E\\QY\\E\\QB\\E\\Ql\\E\\Q'\\E\\Q}\\E", regexArgument0.getRegex());
      assertFalse(regexArgument0.isRegex());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument("<", "/D6' J')[(Jch6V", false);
      regexArgument0.appendAsterisk();
      regexArgument0.globFiles();
      assertEquals("/D6' J')[(Jch6V*", regexArgument0.toString());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument("myCutYBl'}", "myCutYBl'}", false);
      regexArgument0.globFiles();
      assertEquals(".*\\Qm\\E\\Qy\\E\\QC\\E\\Qu\\E\\Qt\\E\\QY\\E\\QB\\E\\Ql\\E\\Q'\\E\\Q}\\E", regexArgument0.getRegex());
      assertFalse(regexArgument0.isRegex());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument("myCutYBl'}", "myCutYBl'}", false);
      RegexArgument regexArgument1 = new RegexArgument();
      regexArgument1.appendAsterisk();
      regexArgument0.merge(regexArgument1);
      assertEquals("[^/]*", regexArgument1.getRegex());
      assertEquals(".*\\Qm\\E\\Qy\\E\\QC\\E\\Qu\\E\\Qt\\E\\QY\\E\\QB\\E\\Ql\\E\\Q'\\E\\Q}\\E[^/]*", regexArgument0.getRegex());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument("myCutYBl'}", "myCutYBl'}", false);
      regexArgument0.merge(regexArgument0);
      assertEquals(".*\\Qm\\E\\Qy\\E\\QC\\E\\Qu\\E\\Qt\\E\\QY\\E\\QB\\E\\Ql\\E\\Q'\\E\\Q}\\E.*\\Qm\\E\\Qy\\E\\QC\\E\\Qu\\E\\Qt\\E\\QY\\E\\QB\\E\\Ql\\E\\Q'\\E\\Q}\\E", regexArgument0.getRegex());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument("sg.edu.nus.comp.cs4218.impl.util.StringUtils");
      regexArgument0.appendAsterisk();
      regexArgument0.merge(regexArgument0);
      assertEquals("sg.edu.nus.comp.cs4218.impl.util.StringUtils*sg.edu.nus.comp.cs4218.impl.util.StringUtils*", regexArgument0.toString());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument(".*", "u`Q_M>Y+$nO66,", true);
      assertEquals("u`Q_M>Y+$nO66,", regexArgument0.toString());
      assertEquals(".*\\Q.\\E[^/]*", regexArgument0.getRegex());
      assertTrue(regexArgument0.isRegex());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument("sg.edu.nus.comp.cs4218.impl.util.StringUtils");
      regexArgument0.toString();
      assertFalse(regexArgument0.isRegex());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument();
      regexArgument0.appendAsterisk();
      regexArgument0.globFiles();
      assertEquals("*", regexArgument0.toString());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument();
      boolean boolean0 = regexArgument0.isRegex();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument("<", "/D6' J')[(Jch6V", false);
      regexArgument0.append('Z');
      assertEquals("/D6' J')[(Jch6VZ", regexArgument0.toString());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument("sg.edu.nus.comp.cs4218.impl.util.StringUtils");
      regexArgument0.getRegex();
      assertFalse(regexArgument0.isRegex());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument("");
      // Undeclared exception!
      try { 
        regexArgument0.merge((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
