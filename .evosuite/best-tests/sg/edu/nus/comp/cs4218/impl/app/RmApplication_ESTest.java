/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 22 06:35:34 GMT 2020
 */

package sg.edu.nus.comp.cs4218.impl.app;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.DataInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import sg.edu.nus.comp.cs4218.impl.app.RmApplication;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RmApplication_ESTest extends RmApplication_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RmApplication rmApplication0 = new RmApplication();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "r~AW7hK!/[nyk3f";
      PipedInputStream pipedInputStream0 = new PipedInputStream(11);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 11);
      MockFile mockFile0 = new MockFile("r~AW7hK!/[nyk3f");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      rmApplication0.run(stringArray0, bufferedInputStream0, mockFileOutputStream0);
      assertEquals(0L, mockFile0.lastModified());
      assertFalse(mockFile0.canExecute());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RmApplication rmApplication0 = new RmApplication();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "3\"_";
      stringArray0[1] = "can not write to std out";
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("can not remove a folder", false);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0);
      rmApplication0.run(stringArray0, (InputStream) null, bufferedOutputStream0);
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RmApplication rmApplication0 = new RmApplication();
      String[] stringArray0 = new String[1];
      PipedInputStream pipedInputStream0 = new PipedInputStream(11);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 11);
      MockFile mockFile0 = new MockFile("r~AW7hK!/[nyk3f");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      // Undeclared exception!
      try { 
        rmApplication0.run(stringArray0, bufferedInputStream0, mockFileOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.RmApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RmApplication rmApplication0 = new RmApplication();
      Boolean boolean0 = Boolean.valueOf("");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      try { 
        rmApplication0.remove(boolean0, boolean0, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // rm: can not remove a folder
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.RmApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RmApplication rmApplication0 = new RmApplication();
      String[] stringArray0 = new String[0];
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        rmApplication0.run(stringArray0, inputStream0, pipedOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // rm: Null arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.RmApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RmApplication rmApplication0 = new RmApplication();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(dataInputStream0, pipedInputStream0);
      try { 
        rmApplication0.run((String[]) null, sequenceInputStream0, pipedOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // rm: Null arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.RmApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RmApplication rmApplication0 = new RmApplication();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "ngQ\"$t}#w#ar+5q/";
      stringArray0[1] = "";
      MockFile mockFile0 = new MockFile("ngQ\"$t}#w#ar+5q/", "");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      // Undeclared exception!
      try { 
        rmApplication0.run(stringArray0, (InputStream) null, mockFileOutputStream0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable cannot be cast to sg.edu.nus.comp.cs4218.exception.RmException
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.RmApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RmApplication rmApplication0 = new RmApplication();
      Boolean boolean0 = new Boolean(true);
      Boolean boolean1 = Boolean.valueOf(false);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      rmApplication0.remove(boolean0, boolean1, stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RmApplication rmApplication0 = new RmApplication();
      Boolean boolean0 = new Boolean(false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "rm: ";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("rm: ");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "rm: ");
      try { 
        rmApplication0.remove(boolean0, boolean0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RmApplication rmApplication0 = new RmApplication();
      Boolean boolean0 = Boolean.valueOf("");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/Users/dr.fat/IdeaProjects/cs4218-project-ay1920-s2-2020-team6");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      try { 
        rmApplication0.remove(boolean0, boolean0, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // rm: File may read only:
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.RmApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RmApplication rmApplication0 = new RmApplication();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      Boolean boolean0 = Boolean.TRUE;
      try { 
        rmApplication0.remove(boolean0, boolean0, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // rm: File do not exist:
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.RmApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RmApplication rmApplication0 = new RmApplication();
      Boolean boolean0 = Boolean.valueOf(true);
      String[] stringArray0 = new String[0];
      try { 
        rmApplication0.remove(boolean0, boolean0, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Missing Argument
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.RmApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RmApplication rmApplication0 = new RmApplication();
      Boolean boolean0 = Boolean.valueOf("ed.f[CxZ!Zp`#");
      try { 
        rmApplication0.remove(boolean0, boolean0, (String[]) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Null arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.RmApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RmApplication rmApplication0 = new RmApplication();
      Boolean boolean0 = new Boolean(false);
      String[] stringArray0 = new String[1];
      try { 
        rmApplication0.remove(boolean0, (Boolean) null, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Null arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.RmApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RmApplication rmApplication0 = new RmApplication();
      String[] stringArray0 = new String[5];
      try { 
        rmApplication0.remove((Boolean) null, (Boolean) null, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Null arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.RmApplication", e);
      }
  }
}
