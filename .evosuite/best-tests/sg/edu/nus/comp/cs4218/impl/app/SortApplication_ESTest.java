/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 22 06:34:40 GMT 2020
 */

package sg.edu.nus.comp.cs4218.impl.app;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;
import sg.edu.nus.comp.cs4218.impl.app.SortApplication;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SortApplication_ESTest extends SortApplication_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SortApplication sortApplication0 = new SortApplication();
      Boolean boolean0 = Boolean.TRUE;
      Boolean boolean1 = new Boolean(true);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      String string0 = sortApplication0.sortFromStdin(boolean0, boolean0, boolean1, sequenceInputStream0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SortApplication sortApplication0 = new SortApplication();
      Boolean boolean0 = new Boolean(false);
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      String string0 = sortApplication0.sortFromStdin(boolean0, boolean0, boolean0, bufferedInputStream0);
      assertEquals("\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SortApplication sortApplication0 = new SortApplication();
      Boolean boolean0 = Boolean.TRUE;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      try { 
        sortApplication0.sortFromStdin(boolean0, (Boolean) null, boolean0, sequenceInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SortApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SortApplication sortApplication0 = new SortApplication();
      Boolean boolean0 = Boolean.valueOf("");
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, 451);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      try { 
        sortApplication0.sortFromStdin(boolean0, boolean0, boolean0, pushbackInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SortApplication sortApplication0 = new SortApplication();
      Boolean boolean0 = new Boolean((String) null);
      String[] stringArray0 = new String[4];
      try { 
        sortApplication0.sortFromFiles(boolean0, boolean0, (Boolean) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SortApplication sortApplication0 = new SortApplication();
      Boolean boolean0 = Boolean.valueOf("!8X&XDHB8>Tr0~O%r");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "!8X&XDHB8>Tr0~O%r";
      try { 
        sortApplication0.sortFromFiles(boolean0, boolean0, boolean0, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No such file or directory
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SortApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SortApplication sortApplication0 = new SortApplication();
      Boolean boolean0 = Boolean.TRUE;
      try { 
        sortApplication0.sortFromStdin(boolean0, boolean0, boolean0, (InputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Null Pointer Exception
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SortApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SortApplication sortApplication0 = new SortApplication();
      Boolean boolean0 = Boolean.valueOf(true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      try { 
        sortApplication0.sortFromFiles(boolean0, boolean0, boolean0, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // This is a directory
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SortApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SortApplication sortApplication0 = new SortApplication();
      Boolean boolean0 = Boolean.TRUE;
      String[] stringArray0 = new String[0];
      String string0 = sortApplication0.sortFromFiles((Boolean) null, boolean0, boolean0, stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SortApplication sortApplication0 = new SortApplication();
      Boolean boolean0 = Boolean.valueOf(false);
      try { 
        sortApplication0.sortFromFiles(boolean0, boolean0, boolean0, (String[]) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Null arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SortApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SortApplication sortApplication0 = new SortApplication();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "}Ge9?%";
      stringArray0[1] = "=6&SWk";
      stringArray0[2] = "No such file or directory";
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      OutputStream outputStream0 = mock(OutputStream.class, new ViolatedAssumptionAnswer());
      try { 
        sortApplication0.run(stringArray0, inputStream0, outputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // sort: No such file or directory
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SortApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SortApplication sortApplication0 = new SortApplication();
      String[] stringArray0 = new String[7];
      try { 
        sortApplication0.run(stringArray0, (InputStream) null, (OutputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // sort: Null Pointer Exception
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SortApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SortApplication sortApplication0 = new SortApplication();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pushbackInputStream0, pushbackInputStream0);
      try { 
        sortApplication0.run((String[]) null, sequenceInputStream0, pipedOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // sort: Null arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SortApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SortApplication sortApplication0 = new SortApplication();
      String[] stringArray0 = new String[0];
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("P __'g]ziA~loFXVo2b");
      sortApplication0.run(stringArray0, byteArrayInputStream0, mockPrintStream0);
      assertEquals(0, byteArrayInputStream0.available());
  }
}
