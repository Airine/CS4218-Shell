/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 22 06:38:50 GMT 2020
 */

package unused;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import unused.GrepArgsParser;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GrepArgsParser_ESTest extends GrepArgsParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GrepArgsParser grepArgsParser0 = new GrepArgsParser();
      String[] stringArray0 = grepArgsParser0.getFileNames();
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GrepArgsParser grepArgsParser0 = new GrepArgsParser();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "illegal option -- ";
      stringArray0[1] = "illegal option -- ";
      stringArray0[2] = "illegal option -- ";
      stringArray0[3] = "illegal option -- ";
      stringArray0[4] = "illegal option -- ";
      grepArgsParser0.parse(stringArray0);
      String[] stringArray1 = grepArgsParser0.getFileNames();
      assertNotNull(stringArray1);
      assertEquals(4, stringArray1.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      GrepArgsParser grepArgsParser0 = new GrepArgsParser();
      // Undeclared exception!
      try { 
        grepArgsParser0.getPattern();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      GrepArgsParser grepArgsParser0 = new GrepArgsParser();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "illegal option -- ";
      grepArgsParser0.parse(stringArray0);
      String string0 = grepArgsParser0.getPattern();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      GrepArgsParser grepArgsParser0 = new GrepArgsParser();
      Boolean boolean0 = grepArgsParser0.isInvert();
      assertFalse(boolean0);
  }
}
