/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 22 06:38:03 GMT 2020
 */

package unused;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import unused.FindArguments;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FindArguments_ESTest extends FindArguments_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FindArguments findArguments0 = new FindArguments();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "I";
      stringArray0[1] = "t:0Rjnz{`R2s";
      stringArray0[2] = "-name";
      stringArray0[3] = "^\"=tDx8^bi;Z$?p";
      findArguments0.parse(stringArray0);
      String string0 = findArguments0.getFilename();
      assertEquals("^\"=tDx8^bi;Z$?p", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FindArguments findArguments0 = new FindArguments();
      String[] stringArray0 = new String[0];
      findArguments0.parse(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FindArguments findArguments0 = new FindArguments();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-name";
      stringArray0[1] = ";SRQk7M/";
      try { 
        findArguments0.parse(stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // find: Invalid Filename
         //
         verifyException("unused.FindArguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FindArguments findArguments0 = new FindArguments();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "3";
      stringArray0[1] = "%,%=I5{%ZfLW:[";
      stringArray0[2] = "Null arguments";
      stringArray0[3] = "-nBme";
      stringArray0[4] = "-name";
      findArguments0.parse(stringArray0);
      assertEquals(5, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FindArguments findArguments0 = new FindArguments();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "c";
      stringArray0[1] = "";
      try { 
        findArguments0.parse(stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // find: Missing Argument
         //
         verifyException("unused.FindArguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FindArguments findArguments0 = new FindArguments();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-name";
      stringArray0[1] = "-name";
      try { 
        findArguments0.parse(stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // find: Paths must precede -name
         //
         verifyException("unused.FindArguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FindArguments findArguments0 = new FindArguments();
      String[] stringArray0 = new String[7];
      stringArray0[0] = ".";
      stringArray0[1] = stringArray0[0];
      stringArray0[2] = ".";
      stringArray0[3] = "-nBme";
      stringArray0[4] = "3";
      stringArray0[5] = stringArray0[0];
      stringArray0[6] = "SAdQ";
      findArguments0.parse(stringArray0);
      Set<String> set0 = findArguments0.getDirectories();
      assertTrue(set0.contains("SAdQ"));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FindArguments findArguments0 = new FindArguments();
      try { 
        findArguments0.parse((String[]) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // find: Null arguments
         //
         verifyException("unused.FindArguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FindArguments findArguments0 = new FindArguments();
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      try { 
        findArguments0.parse(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("unused.FindArguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FindArguments findArguments0 = new FindArguments();
      Set<String> set0 = findArguments0.getDirectories();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FindArguments findArguments0 = new FindArguments();
      String string0 = findArguments0.getFilename();
      assertNull(string0);
  }
}
