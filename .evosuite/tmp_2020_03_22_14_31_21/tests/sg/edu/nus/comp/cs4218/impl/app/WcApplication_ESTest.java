/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 22 06:34:32 GMT 2020
 */

package sg.edu.nus.comp.cs4218.impl.app;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.junit.runner.RunWith;
import sg.edu.nus.comp.cs4218.impl.app.WcApplication;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WcApplication_ESTest extends WcApplication_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      Boolean boolean0 = Boolean.TRUE;
      Boolean boolean1 = Boolean.valueOf("L7R$vlP=BF");
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 789, (byte)96);
      wcApplication0.countFromStdin(boolean0, boolean1, boolean1, byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      Boolean boolean0 = Boolean.FALSE;
      Boolean boolean1 = new Boolean("");
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      wcApplication0.countFromStdin(boolean0, boolean1, boolean0, byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      assertNotNull(wcApplication0);
      
      Boolean boolean0 = Boolean.TRUE;
      assertNotNull(boolean0);
      assertTrue(boolean0);
      
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 789, (byte)96);
      assertNotNull(byteArrayInputStream0);
      assertEquals((-788), byteArrayInputStream0.available());
      assertEquals(1, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      
      String string0 = wcApplication0.countFromStdin(boolean0, boolean0, boolean0, byteArrayInputStream0);
      assertNotNull(string0);
      assertEquals((-788), byteArrayInputStream0.available());
      assertEquals("       0       0       0", string0);
      assertEquals(1, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      assertNotNull(wcApplication0);
      
      String[] stringArray0 = new String[8];
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      // Undeclared exception!
      try { 
        wcApplication0.run(stringArray0, pipedInputStream0, pipedOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.args.WcArguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      assertNotNull(wcApplication0);
      
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      assertNotNull(fileDescriptor0);
      assertFalse(fileDescriptor0.valid());
      
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      assertNotNull(mockFileInputStream0);
      
      try { 
        wcApplication0.getCountReport(mockFileInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      assertNotNull(wcApplication0);
      
      Boolean boolean0 = Boolean.TRUE;
      assertNotNull(boolean0);
      assertTrue(boolean0);
      
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 789, (byte)96);
      assertNotNull(byteArrayInputStream0);
      assertEquals((-788), byteArrayInputStream0.available());
      assertEquals(1, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      
      // Undeclared exception!
      try { 
        wcApplication0.countFromStdin(boolean0, boolean0, (Boolean) null, byteArrayInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.WcApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      assertNotNull(wcApplication0);
      
      Boolean boolean0 = Boolean.FALSE;
      assertNotNull(boolean0);
      assertFalse(boolean0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(724);
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      // Undeclared exception!
      try { 
        wcApplication0.countFromStdin(boolean0, boolean0, boolean0, pipedInputStream0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable cannot be cast to sg.edu.nus.comp.cs4218.exception.WcException
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.WcApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      assertNotNull(wcApplication0);
      
      File file0 = MockFile.createTempFile("}$7ZnU", "}$7ZnU", (File) null);
      assertNotNull(file0);
      assertEquals("}$7ZnU0}$7ZnU", file0.getName());
      assertTrue(file0.exists());
      assertEquals(0L, file0.getFreeSpace());
      assertFalse(file0.isDirectory());
      assertEquals(0L, file0.length());
      assertEquals("/var/folders/7y/31bgr_m103sgjq41bs6b7r_m0000gq/T/}$7ZnU0}$7ZnU", file0.toString());
      assertTrue(file0.canRead());
      assertEquals(0L, file0.getTotalSpace());
      assertEquals(1392409281320L, file0.lastModified());
      assertTrue(file0.canWrite());
      assertFalse(file0.isHidden());
      assertTrue(file0.isFile());
      assertEquals(0L, file0.getUsableSpace());
      assertEquals("/var/folders/7y/31bgr_m103sgjq41bs6b7r_m0000gq/T", file0.getParent());
      assertTrue(file0.canExecute());
      assertTrue(file0.isAbsolute());
      
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      assertNotNull(mockFileInputStream0);
      
      long[] longArray0 = wcApplication0.getCountReport(mockFileInputStream0);
      assertNotNull(longArray0);
      assertEquals("}$7ZnU0}$7ZnU", file0.getName());
      assertTrue(file0.exists());
      assertEquals(0L, file0.getFreeSpace());
      assertFalse(file0.isDirectory());
      assertEquals(0L, file0.length());
      assertEquals("/var/folders/7y/31bgr_m103sgjq41bs6b7r_m0000gq/T/}$7ZnU0}$7ZnU", file0.toString());
      assertTrue(file0.canRead());
      assertEquals(0L, file0.getTotalSpace());
      assertEquals(1392409281320L, file0.lastModified());
      assertTrue(file0.canWrite());
      assertFalse(file0.isHidden());
      assertTrue(file0.isFile());
      assertEquals(0L, file0.getUsableSpace());
      assertEquals("/var/folders/7y/31bgr_m103sgjq41bs6b7r_m0000gq/T", file0.getParent());
      assertTrue(file0.canExecute());
      assertTrue(file0.isAbsolute());
      assertEquals((-1), mockFileInputStream0.available());
      assertEquals(3, longArray0.length);
      assertArrayEquals(new long[] {0L, 0L, 0L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      assertNotNull(wcApplication0);
      
      Boolean boolean0 = Boolean.TRUE;
      assertNotNull(boolean0);
      assertTrue(boolean0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Could not write to output stream";
      stringArray0[1] = "S\"dl[Q>&t+W6O}U 1";
      String string0 = wcApplication0.countFromFiles(boolean0, boolean0, boolean0, stringArray0);
      assertNotNull(string0);
      assertEquals("wc: No such file or directory\nwc: No such file or directory\n       0       0       0 total", string0);
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      assertNotNull(wcApplication0);
      
      Boolean boolean0 = Boolean.TRUE;
      assertNotNull(boolean0);
      assertTrue(boolean0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Could not write to output stream";
      try { 
        wcApplication0.countFromFiles(boolean0, boolean0, boolean0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      assertNotNull(wcApplication0);
      
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      assertNotNull(byteArrayInputStream0);
      assertEquals(7, byteArrayInputStream0.available());
      assertEquals(7, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)10, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      
      long[] longArray0 = wcApplication0.getCountReport(byteArrayInputStream0);
      assertNotNull(longArray0);
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(7, byteArray0.length);
      assertEquals(3, longArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)10, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertArrayEquals(new long[] {1L, 2L, 7L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      assertNotNull(wcApplication0);
      
      Boolean boolean0 = Boolean.FALSE;
      assertNotNull(boolean0);
      assertFalse(boolean0);
      
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      assertNotNull(byteArrayInputStream0);
      assertEquals(2, byteArrayInputStream0.available());
      assertEquals(2, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)9}, byteArray0);
      
      String string0 = wcApplication0.countFromStdin(boolean0, boolean0, boolean0, byteArrayInputStream0);
      assertNotNull(string0);
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals("", string0);
      assertEquals(2, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)9}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      assertNotNull(wcApplication0);
      
      try { 
        wcApplication0.getCountReport((InputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Null Pointer Exception
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.WcApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      assertNotNull(wcApplication0);
      
      Boolean boolean0 = new Boolean(true);
      assertNotNull(boolean0);
      assertTrue(boolean0);
      
      try { 
        wcApplication0.countFromStdin(boolean0, boolean0, boolean0, (InputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // wc: Null Pointer Exception
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.WcApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      assertNotNull(wcApplication0);
      
      Boolean boolean0 = Boolean.FALSE;
      assertNotNull(boolean0);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      String string0 = wcApplication0.countFromFiles(boolean0, boolean0, boolean0, stringArray0);
      assertNotNull(string0);
      assertEquals("wc: This is a directory\nwc: This is a directory\nwc: This is a directory\nwc: This is a directory\nwc: This is a directory\nwc: This is a directory\n total", string0);
      assertEquals(6, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      assertNotNull(wcApplication0);
      
      Boolean boolean0 = new Boolean(false);
      assertNotNull(boolean0);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      String string0 = wcApplication0.countFromFiles(boolean0, boolean0, (Boolean) null, stringArray0);
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      assertNotNull(wcApplication0);
      
      Boolean boolean0 = Boolean.valueOf(false);
      assertNotNull(boolean0);
      assertFalse(boolean0);
      
      try { 
        wcApplication0.countFromFiles(boolean0, boolean0, boolean0, (String[]) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Exception Caught
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.WcApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      assertNotNull(wcApplication0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "wc: This is a directory";
      stringArray0[1] = "n<M1lodk]y5o";
      stringArray0[2] = "wc: No such file or directory";
      stringArray0[3] = "i4;O\tJNIlgn~*Q";
      stringArray0[4] = "win";
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      assertNotNull(byteArrayInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(0, byteArray0.length);
      assertArrayEquals(new byte[] {}, byteArray0);
      
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(60);
      assertNotNull(byteArrayOutputStream0);
      assertEquals("", byteArrayOutputStream0.toString());
      assertEquals(0, byteArrayOutputStream0.size());
      
      wcApplication0.run(stringArray0, byteArrayInputStream0, byteArrayOutputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals("wc: No such file or directory\nwc: No such file or directory\nwc: No such file or directory\nwc: No such file or directory\nwc: No such file or directory\n       0       0       0 total\n", byteArrayOutputStream0.toString());
      assertEquals(181, byteArrayOutputStream0.size());
      assertEquals(5, stringArray0.length);
      assertEquals(0, byteArray0.length);
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      assertNotNull(wcApplication0);
      
      File file0 = MockFile.createTempFile("}$7ZnU", "}$7ZnU", (File) null);
      assertNotNull(file0);
      assertTrue(file0.isFile());
      assertTrue(file0.canWrite());
      assertTrue(file0.isAbsolute());
      assertFalse(file0.isHidden());
      assertEquals(0L, file0.getUsableSpace());
      assertEquals(1392409281320L, file0.lastModified());
      assertEquals(0L, file0.getTotalSpace());
      assertEquals(0L, file0.length());
      assertTrue(file0.exists());
      assertEquals("}$7ZnU0}$7ZnU", file0.getName());
      assertEquals(0L, file0.getFreeSpace());
      assertFalse(file0.isDirectory());
      assertTrue(file0.canExecute());
      assertTrue(file0.canRead());
      assertEquals("/var/folders/7y/31bgr_m103sgjq41bs6b7r_m0000gq/T/}$7ZnU0}$7ZnU", file0.toString());
      assertEquals("/var/folders/7y/31bgr_m103sgjq41bs6b7r_m0000gq/T", file0.getParent());
      
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      assertNotNull(mockFileInputStream0);
      
      String[] stringArray0 = new String[9];
      try { 
        wcApplication0.run(stringArray0, mockFileInputStream0, (OutputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // wc: Null Pointer Exception
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.WcApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      MockFile mockFile0 = new MockFile("%8YlG~dsLPrKT", "TCo");
      File file0 = MockFile.createTempFile("sg.edu.nus.comp.cs4218.impl.app.WcApplication", "sg.edu.nus.comp.cs4218.impl.app.WcApplication", (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      String[] stringArray0 = new String[0];
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Null Pointer Exception", true);
      wcApplication0.run(stringArray0, mockFileInputStream0, mockFileOutputStream0);
      assertEquals(0, stringArray0.length);
  }
}
