/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 22 06:37:15 GMT 2020
 */

package sg.edu.nus.comp.cs4218.impl.app;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataOutputStream;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import sg.edu.nus.comp.cs4218.Environment;
import sg.edu.nus.comp.cs4218.impl.app.CpApplication;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CpApplication_ESTest extends CpApplication_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CpApplication cpApplication0 = new CpApplication();
      String[] stringArray0 = new String[0];
      String string0 = cpApplication0.cpFilesToFolder((String) null, stringArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CpApplication cpApplication0 = new CpApplication();
      String[] stringArray0 = new String[0];
      String string0 = cpApplication0.cpFilesToFolder("OutputStream not provided", stringArray0);
      assertEquals("OutputStream not provided", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CpApplication cpApplication0 = new CpApplication();
      String[] stringArray0 = new String[2];
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      OutputStream outputStream0 = mock(OutputStream.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        cpApplication0.run(stringArray0, inputStream0, outputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.CpApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CpApplication cpApplication0 = new CpApplication();
      try { 
        cpApplication0.cpSrcFileToDestFile((String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          CpApplication cpApplication0 = new CpApplication();
          try { 
            cpApplication0.cpSrcFileToDestFile("~P0}O", "~P0}O");
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.io.FilePermission\" \"/Users/dr.fat/IdeaProjects/cs4218-project-ay1920-s2-2020-team6/~P0}O\" \"write\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
             // sun.nio.fs.UnixPath.checkWrite(UnixPath.java:801)
             // sun.nio.fs.UnixCopyFile.copy(UnixCopyFile.java:513)
             // sun.nio.fs.UnixFileSystemProvider.copy(UnixFileSystemProvider.java:253)
             // java.nio.file.Files.copy(Files.java:1274)
             // sg.edu.nus.comp.cs4218.impl.app.CpApplication.cpSrcFileToDestFile(CpApplication.java:24)
             // sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CpApplication cpApplication0 = new CpApplication();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "RCpbN<gs}";
      stringArray0[1] = "";
      stringArray0[2] = " or they are the same file.";
      stringArray0[3] = " or they are the same file.";
      stringArray0[4] = "w'|Q$$PY_";
      stringArray0[5] = "sg.edu.nus.comp.cs4218.impl.app.CpApplication";
      stringArray0[6] = "sg.edu.nus.comp.cs4218.impl.app.CpApplication";
      stringArray0[7] = "+TajrYG-w";
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      OutputStream outputStream0 = mock(OutputStream.class, new ViolatedAssumptionAnswer());
      cpApplication0.run(stringArray0, inputStream0, outputStream0);
      assertEquals(8, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CpApplication cpApplication0 = new CpApplication();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "3Hch=YO.{8";
      stringArray0[2] = "H\"35a%\"7j3J\"ga'";
      stringArray0[3] = "9@cn0EnGuh<Zi=";
      stringArray0[4] = "&ax|VMQ}UW%3dk!t";
      stringArray0[5] = "<3";
      stringArray0[6] = "";
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        cpApplication0.run(stringArray0, inputStream0, (OutputStream) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable cannot be cast to sg.edu.nus.comp.cs4218.exception.CpException
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.CpApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CpApplication cpApplication0 = new CpApplication();
      String[] stringArray0 = new String[0];
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      try { 
        cpApplication0.run(stringArray0, sequenceInputStream0, dataOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // cd: Insufficient arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.CpApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CpApplication cpApplication0 = new CpApplication();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      try { 
        cpApplication0.run((String[]) null, pipedInputStream0, pipedOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // cd: Null arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.CpApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          CpApplication cpApplication0 = new CpApplication();
          String[] stringArray0 = new String[8];
          stringArray0[0] = "RCpbN<gs}";
          EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("RCpbN<gs}");
          FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
          try { 
            cpApplication0.cpFilesToFolder("", stringArray0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.io.FilePermission\" \"/Users/dr.fat/IdeaProjects/cs4218-project-ay1920-s2-2020-team6/RCpbN<gs}\" \"write\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
             // sun.nio.fs.UnixPath.checkWrite(UnixPath.java:801)
             // sun.nio.fs.UnixCopyFile.copy(UnixCopyFile.java:513)
             // sun.nio.fs.UnixFileSystemProvider.copy(UnixFileSystemProvider.java:253)
             // java.nio.file.Files.copy(Files.java:1274)
             // sg.edu.nus.comp.cs4218.impl.app.CpApplication.cpFilesToFolder(CpApplication.java:45)
             // sun.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CpApplication cpApplication0 = new CpApplication();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      try { 
        cpApplication0.cpFilesToFolder("", stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         //  is the sub dir of  or they are the same file.
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.CpApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          CpApplication cpApplication0 = new CpApplication();
          String[] stringArray0 = new String[2];
          stringArray0[0] = "1d_ ";
          try { 
            cpApplication0.cpFilesToFolder("Too many arguments", stringArray0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.io.FilePermission\" \"/Users/dr.fat/IdeaProjects/cs4218-project-ay1920-s2-2020-team6/Too many arguments/1d_ \" \"write\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
             // sun.nio.fs.UnixPath.checkWrite(UnixPath.java:801)
             // sun.nio.fs.UnixCopyFile.copy(UnixCopyFile.java:513)
             // sun.nio.fs.UnixFileSystemProvider.copy(UnixFileSystemProvider.java:253)
             // java.nio.file.Files.copy(Files.java:1274)
             // sg.edu.nus.comp.cs4218.impl.app.CpApplication.cpFilesToFolder(CpApplication.java:45)
             // sun.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CpApplication cpApplication0 = new CpApplication();
      String[] stringArray0 = new String[2];
      try { 
        cpApplication0.cpFilesToFolder("", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CpApplication cpApplication0 = new CpApplication();
      String[] stringArray0 = new String[0];
      String string0 = cpApplication0.cpFilesToFolder("", stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          CpApplication cpApplication0 = new CpApplication();
          String[] stringArray0 = new String[2];
          stringArray0[0] = "RjMFtq?y;wIMUoyh6\"_";
          Environment.currentDirectory = "RjMFtq?y;wIMUoyh6\"_";
          stringArray0[1] = "";
          InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
          // Undeclared exception!
          try { 
            cpApplication0.run(stringArray0, inputStream0, (OutputStream) null);
            fail("Expecting exception: ClassCastException");
          
          } catch(ClassCastException e) {
             //
             // org.evosuite.runtime.mock.java.lang.MockThrowable cannot be cast to sg.edu.nus.comp.cs4218.exception.CpException
             //
             verifyException("sg.edu.nus.comp.cs4218.impl.app.CpApplication", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }
}
